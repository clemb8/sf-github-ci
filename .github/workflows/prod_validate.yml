name: Validate deployment on production

# Controls when the action will run.
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    pull_request:
        types:
            - opened
            - synchronize
        branches:
            - main
        paths:
            - 'force-app/**'

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    validate_deploy_production:
        runs-on: ubuntu-latest
        outputs:
            coverage: ${{ steps.apex-coverage.outputs.coverage }}

        steps:
            - name: git-checkout
              uses: 'actions/checkout@main'

            - name: sfdx-setup
              run: |
                npm install -g @salesforce/cli

            - name: "Populate auth file with SFDX_URL secret"
              run: "echo ${{ secrets.SFDX_URL_PRD }} > ./SFDX_URL_STORE.txt"

            - name: "Authenticate with dev hub"
              run: sf org login sfdx-url -f ./SFDX_URL_STORE.txt -a devhub -d

            - name: sfdx-deploy
              shell: bash
              env:
                  SFDX_DISABLE_DNS_CHECK: true
              run: |
                sf project deploy validate --source-dir force-app/main/default -o devhub -l RunLocalTests --coverage-formatters json-summary -w 90
            - name: apex-coverage
              id: apex-coverage
              run: |
                  coverage=$(sh ./scripts/apex-coverage.sh)
                  echo 'var<<EOF' >> $GITHUB_OUTPUT
                  echo "$coverage" >> "$GITHUB_OUTPUT"
                  echo 'EOF' >> $GITHUB_OUTPUT
                  echo ${{ steps.apex-coverage.outputs.coverage }}
            - name: github-comment
              uses: actions/github-script@v7
              with:
                script: |
                    github.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: '${{ steps.apex-coverage.outputs.coverage }}'
                    })
              
